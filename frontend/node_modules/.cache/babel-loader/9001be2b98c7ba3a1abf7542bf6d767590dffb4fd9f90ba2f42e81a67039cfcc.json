{"ast":null,"code":"import { observable, action, makeObservable } from 'mobx';\nexport class Task {\n  constructor(id, title, email, role, phone) {\n    this.id = void 0;\n    this.name = void 0;\n    this.email = void 0;\n    this.role = void 0;\n    this.phone = void 0;\n    this.id = id;\n    this.name = title;\n    this.email = email;\n    this.role = role;\n    this.phone = phone;\n    makeObservable(this, {\n      name: observable\n    });\n  }\n}\nexport class TaskStore {\n  constructor() {\n    this.tasks = [];\n    makeObservable(this, {\n      tasks: observable,\n      fetchTasks: action,\n      addTask: action\n    });\n  }\n  async fetchTasks() {\n    this.clearTasks();\n    try {\n      const response = await fetch('http://localhost:8000/api/v1/user');\n      const tasks = await response.json();\n      this.tasks = tasks;\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }\n  async addTask(title) {\n    try {\n      const response = await fetch('http://localhost:8000/api/v1/user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: Date.now(),\n          title\n        })\n      });\n      const task = await response.json();\n      this.tasks.push(task);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  }\n  async clearTasks() {\n    this.tasks = [];\n  }\n}","map":{"version":3,"names":["observable","action","makeObservable","Task","constructor","id","title","email","role","phone","name","TaskStore","tasks","fetchTasks","addTask","clearTasks","response","fetch","json","error","console","method","headers","body","JSON","stringify","Date","now","task","push"],"sources":["/home/NIX/lazoryk/projects/react_ts/todoapp/todo-app/src/stores/task.tsx"],"sourcesContent":["import { observable, action, makeObservable } from 'mobx';\n\nexport class Task {\n    id: number;\n    name: string;\n    email: string;\n    role: string;\n    phone: string;\n  \n    constructor(id: number, title: string, email: string, role: string, phone: string) {\n      this.id = id;\n      this.name = title;\n      this.email = email;\n      this.role = role;\n      this.phone = phone;\n\n      makeObservable(this, {\n          name: observable\n      })\n    }\n  }\n  \n  export class TaskStore {\n    tasks: Task[] = [];\n  \n    constructor() {\n      makeObservable(this, {\n          tasks: observable,\n          fetchTasks: action,\n          addTask: action\n      })\n    }\n  \n    async fetchTasks(): Promise<void> {\n        this.clearTasks();\n      try {\n        const response = await fetch('http://localhost:8000/api/v1/user');\n        const tasks = await response.json();\n        this.tasks = tasks;\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    }\n  \n    async addTask(title: string): Promise<void> {\n      try {\n        const response = await fetch('http://localhost:8000/api/v1/user', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ id: Date.now(), title }),\n        });\n        const task = await response.json();\n        this.tasks.push(task);\n      } catch (error) {\n        console.error('Error adding task:', error);\n      }\n    }\n\n    async clearTasks(): void {\n        this.tasks = [];\n    }\n  }"],"mappings":"AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,cAAc,QAAQ,MAAM;AAEzD,OAAO,MAAMC,IAAI,CAAC;EAOdC,WAAWA,CAACC,EAAU,EAAEC,KAAa,EAAEC,KAAa,EAAEC,IAAY,EAAEC,KAAa,EAAE;IAAA,KANnFJ,EAAE;IAAA,KACFK,IAAI;IAAA,KACJH,KAAK;IAAA,KACLC,IAAI;IAAA,KACJC,KAAK;IAGH,IAAI,CAACJ,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACK,IAAI,GAAGJ,KAAK;IACjB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAElBP,cAAc,CAAC,IAAI,EAAE;MACjBQ,IAAI,EAAEV;IACV,CAAC,CAAC;EACJ;AACF;AAEA,OAAO,MAAMW,SAAS,CAAC;EAGrBP,WAAWA,CAAA,EAAG;IAAA,KAFdQ,KAAK,GAAW,EAAE;IAGhBV,cAAc,CAAC,IAAI,EAAE;MACjBU,KAAK,EAAEZ,UAAU;MACjBa,UAAU,EAAEZ,MAAM;MAClBa,OAAO,EAAEb;IACb,CAAC,CAAC;EACJ;EAEA,MAAMY,UAAUA,CAAA,EAAkB;IAC9B,IAAI,CAACE,UAAU,CAAC,CAAC;IACnB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;MACjE,MAAML,KAAK,GAAG,MAAMI,QAAQ,CAACE,IAAI,CAAC,CAAC;MACnC,IAAI,CAACN,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF;EAEA,MAAML,OAAOA,CAACR,KAAa,EAAiB;IAC1C,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEpB,EAAE,EAAEqB,IAAI,CAACC,GAAG,CAAC,CAAC;UAAErB;QAAM,CAAC;MAChD,CAAC,CAAC;MACF,MAAMsB,IAAI,GAAG,MAAMZ,QAAQ,CAACE,IAAI,CAAC,CAAC;MAClC,IAAI,CAACN,KAAK,CAACiB,IAAI,CAACD,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF;EAEA,MAAMJ,UAAUA,CAAA,EAAS;IACrB,IAAI,CAACH,KAAK,GAAG,EAAE;EACnB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}