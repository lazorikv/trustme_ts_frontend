{"ast":null,"code":"var _jsxFileName = \"/home/NIX/lazoryk/projects/react_ts/todoapp/todo-app/src/components/TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { useRootStore } from '../stores/RootStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    taskStore\n  } = useRootStore();\n  useEffect(() => {\n    taskStore.fetchTasks();\n  }, [taskStore]);\n\n  // Функция для проверки уникальности ключей\n  const isUnique = (value, index, self) => {\n    return self.indexOf(value) === index;\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: taskStore.tasks.filter(isUnique) // Фильтруем уникальные задачи\n    .map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [task.name, \" \", task.email, \" \", task.role, \" \", task.phone]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}, \"hq36eUu54rD080ZHybAm51eaeW0=\", false, function () {\n  return [useRootStore];\n})), \"hq36eUu54rD080ZHybAm51eaeW0=\", false, function () {\n  return [useRootStore];\n});\n_c2 = TaskList;\nexport default TaskList;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskList$observer\");\n$RefreshReg$(_c2, \"TaskList\");","map":{"version":3,"names":["React","observer","useRootStore","jsxDEV","_jsxDEV","TaskList","_s","_c","taskStore","useEffect","fetchTasks","isUnique","value","index","self","indexOf","children","tasks","filter","map","task","name","email","role","phone","id","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/NIX/lazoryk/projects/react_ts/todoapp/todo-app/src/components/TaskList.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { observer } from 'mobx-react';\nimport { useRootStore } from '../stores/RootStore';\n\nconst TaskList: React.FC = observer(() => {\n  const { taskStore } = useRootStore();\n\n  useEffect(() => {\n    taskStore.fetchTasks();\n  }, [taskStore]);\n\n  // Функция для проверки уникальности ключей\n  const isUnique = (value, index, self) => {\n    return self.indexOf(value) === index;\n  };\n\n  return (\n    <ul>\n      {taskStore.tasks\n        .filter(isUnique) // Фильтруем уникальные задачи\n        .map((task) => (\n          <li key={task.id}>{task.name} {task.email} {task.role} {task.phone}</li>\n        ))}\n    </ul>\n  );\n});\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAmB,OAAO;AACtC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAkB,GAAAC,EAAA,CAAGL,QAAQ,CAAAM,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACxC,MAAM;IAAEE;EAAU,CAAC,GAAGN,YAAY,CAAC,CAAC;EAEpCO,SAAS,CAAC,MAAM;IACdD,SAAS,CAACE,UAAU,CAAC,CAAC;EACxB,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMG,QAAQ,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,KAAK;IACvC,OAAOA,IAAI,CAACC,OAAO,CAACH,KAAK,CAAC,KAAKC,KAAK;EACtC,CAAC;EAED,oBACET,OAAA;IAAAY,QAAA,EACGR,SAAS,CAACS,KAAK,CACbC,MAAM,CAACP,QAAQ,CAAC,CAAC;IAAA,CACjBQ,GAAG,CAAEC,IAAI,iBACRhB,OAAA;MAAAY,QAAA,GAAmBI,IAAI,CAACC,IAAI,EAAC,GAAC,EAACD,IAAI,CAACE,KAAK,EAAC,GAAC,EAACF,IAAI,CAACG,IAAI,EAAC,GAAC,EAACH,IAAI,CAACI,KAAK;IAAA,GAAzDJ,IAAI,CAACK,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuD,CACxE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAET,CAAC;EAAA,QApBuB3B,YAAY;AAAA,EAoBnC,CAAC;EAAA,QApBsBA,YAAY;AAAA,EAoBlC;AAAC4B,GAAA,GArBGzB,QAAkB;AAuBxB,eAAeA,QAAQ;AAAC,IAAAE,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}