{"ast":null,"code":"var _jsxFileName = \"/home/NIX/lazoryk/projects/react_ts/todoapp/todo-app/src/components/TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { useRootStore } from '../stores/RootStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    taskStore\n  } = useRootStore();\n  const tasks = useMemo(() => taskStore.tasks, [taskStore]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [task.name, \" \", task.email, \" \", task.role, \" \", task.phone]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}, \"ldBILLorgXEYHHdzlabEtRVUNoc=\", false, function () {\n  return [useRootStore];\n})), \"ldBILLorgXEYHHdzlabEtRVUNoc=\", false, function () {\n  return [useRootStore];\n});\n_c2 = TaskList;\nexport default TaskList;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskList$observer\");\n$RefreshReg$(_c2, \"TaskList\");","map":{"version":3,"names":["React","observer","useRootStore","jsxDEV","_jsxDEV","TaskList","_s","_c","taskStore","tasks","useMemo","children","map","task","name","email","role","phone","id","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/NIX/lazoryk/projects/react_ts/todoapp/todo-app/src/components/TaskList.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react';\nimport { useRootStore } from '../stores/RootStore';\n\nconst TaskList: React.FC = observer(() => {\n  const { taskStore } = useRootStore();\n\n  const tasks = useMemo(() => taskStore.tasks, [taskStore]);\n\n  return (\n    <ul>\n      {tasks.map((task) => (\n        <li key={task.id}>{task.name} {task.email} {task.role} {task.phone}</li>\n      ))}\n    </ul>\n  );\n});\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAqB,OAAO;AACxC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAkB,GAAAC,EAAA,CAAGL,QAAQ,CAAAM,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACxC,MAAM;IAAEE;EAAU,CAAC,GAAGN,YAAY,CAAC,CAAC;EAEpC,MAAMO,KAAK,GAAGC,OAAO,CAAC,MAAMF,SAAS,CAACC,KAAK,EAAE,CAACD,SAAS,CAAC,CAAC;EAEzD,oBACEJ,OAAA;IAAAO,QAAA,EACGF,KAAK,CAACG,GAAG,CAAEC,IAAI,iBACdT,OAAA;MAAAO,QAAA,GAAmBE,IAAI,CAACC,IAAI,EAAC,GAAC,EAACD,IAAI,CAACE,KAAK,EAAC,GAAC,EAACF,IAAI,CAACG,IAAI,EAAC,GAAC,EAACH,IAAI,CAACI,KAAK;IAAA,GAAzDJ,IAAI,CAACK,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuD,CACxE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;EAAA,QAXuBpB,YAAY;AAAA,EAWnC,CAAC;EAAA,QAXsBA,YAAY;AAAA,EAWlC;AAACqB,GAAA,GAZGlB,QAAkB;AAcxB,eAAeA,QAAQ;AAAC,IAAAE,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}