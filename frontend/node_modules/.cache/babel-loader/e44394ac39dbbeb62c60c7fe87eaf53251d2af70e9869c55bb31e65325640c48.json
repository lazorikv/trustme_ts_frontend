{"ast":null,"code":"import _initializerDefineProperty from \"/home/NIX/lazoryk/projects/react_ts/todoapp/todo-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"/home/NIX/lazoryk/projects/react_ts/todoapp/todo-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"/home/NIX/lazoryk/projects/react_ts/todoapp/todo-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\nvar _class,\n  _descriptor,\n  _s = $RefreshSig$();\nimport { createContext, useContext } from 'react';\nimport { observable, action, makeObservable } from 'mobx';\nexport class Task {\n  constructor(id, title) {\n    this.id = void 0;\n    this.title = void 0;\n    this.id = id;\n    this.title = title;\n    makeObservable(this, {\n      title: observable\n    });\n  }\n}\nexport let TaskStore = (_class = class TaskStore {\n  constructor() {\n    _initializerDefineProperty(this, \"tasks\", _descriptor, this);\n  }\n  async fetchTasks() {\n    try {\n      const response = await fetch('http://localhost:3000/tasks');\n      const tasks = await response.json();\n      this.tasks = tasks;\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }\n  async addTask(title) {\n    try {\n      const response = await fetch('http://localhost:3000/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: Date.now(),\n          title\n        })\n      });\n      const task = await response.json();\n      this.tasks.push(task);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  }\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"tasks\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"fetchTasks\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"fetchTasks\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addTask\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"addTask\"), _class.prototype)), _class);\nexport class RootStore {\n  constructor() {\n    this.taskStore = void 0;\n    this.taskStore = new TaskStore();\n  }\n}\nconst rootStore = new RootStore();\nconst RootStoreContext = /*#__PURE__*/createContext(rootStore);\nexport const useRootStore = () => {\n  _s();\n  return useContext(RootStoreContext);\n};\n_s(useRootStore, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");","map":{"version":3,"names":["createContext","useContext","observable","action","makeObservable","Task","constructor","id","title","TaskStore","_class","_initializerDefineProperty","_descriptor","fetchTasks","response","fetch","tasks","json","error","console","addTask","method","headers","body","JSON","stringify","Date","now","task","push","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","Object","getOwnPropertyDescriptor","RootStore","taskStore","rootStore","RootStoreContext","useRootStore","_s"],"sources":["/home/NIX/lazoryk/projects/react_ts/todoapp/todo-app/src/stores/RootStore.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\nimport { observable, action, makeObservable } from 'mobx';\n\nexport class Task {\n  id: number;\n  title: string;\n\n  constructor(id: number, title: string) {\n    this.id = id;\n    this.title = title;\n    makeObservable(this, {\n        title: observable\n    })\n  }\n}\n\nexport class TaskStore {\n  @observable tasks: Task[] = [];\n\n  @action\n  async fetchTasks(): Promise<void> {\n    try {\n      const response = await fetch('http://localhost:3000/tasks');\n      const tasks = await response.json();\n      this.tasks = tasks;\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  }\n\n  @action\n  async addTask(title: string): Promise<void> {\n    try {\n      const response = await fetch('http://localhost:3000/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ id: Date.now(), title }),\n      });\n      const task = await response.json();\n      this.tasks.push(task);\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  }\n}\n\nexport class RootStore {\n  taskStore: TaskStore;\n\n  constructor() {\n    this.taskStore = new TaskStore();\n  }\n}\n\nconst rootStore = new RootStore();\nconst RootStoreContext = createContext<RootStore>(rootStore);\n\nexport const useRootStore = (): RootStore => useContext(RootStoreContext);"],"mappings":";;;;;;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,SAASC,UAAU,EAAEC,MAAM,EAAEC,cAAc,QAAQ,MAAM;AAEzD,OAAO,MAAMC,IAAI,CAAC;EAIhBC,WAAWA,CAACC,EAAU,EAAEC,KAAa,EAAE;IAAA,KAHvCD,EAAE;IAAA,KACFC,KAAK;IAGH,IAAI,CAACD,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClBJ,cAAc,CAAC,IAAI,EAAE;MACjBI,KAAK,EAAEN;IACX,CAAC,CAAC;EACJ;AACF;AAEA,WAAaO,SAAS,IAAAC,MAAA,GAAf,MAAMD,SAAS,CAAC;EAAAH,YAAA;IAAAK,0BAAA,gBAAAC,WAAA;EAAA;EAGrB,MACMC,UAAUA,CAAA,EAAkB;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACnC,IAAI,CAACD,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF;EAEA,MACME,OAAOA,CAACZ,KAAa,EAAiB;IAC1C,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DM,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAElB,EAAE,EAAEmB,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEnB;QAAM,CAAC;MAChD,CAAC,CAAC;MACF,MAAMoB,IAAI,GAAG,MAAMd,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAI,CAACD,KAAK,CAACa,IAAI,CAACD,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF;AACF,CAAC,GAAAN,WAAA,GAAAkB,yBAAA,CAAApB,MAAA,CAAAqB,SAAA,YA7BE7B,UAAU;EAAA8B,YAAA;EAAAC,UAAA;EAAAC,QAAA;EAAAC,WAAA,WAAAA,CAAA;IAAA,OAAiB,EAAE;EAAA;AAAA,IAAAL,yBAAA,CAAApB,MAAA,CAAAqB,SAAA,iBAE7B5B,MAAM,GAAAiC,MAAA,CAAAC,wBAAA,CAAA3B,MAAA,CAAAqB,SAAA,iBAAArB,MAAA,CAAAqB,SAAA,GAAAD,yBAAA,CAAApB,MAAA,CAAAqB,SAAA,cAWN5B,MAAM,GAAAiC,MAAA,CAAAC,wBAAA,CAAA3B,MAAA,CAAAqB,SAAA,cAAArB,MAAA,CAAAqB,SAAA,IAAArB,MAAA;AAkBT,OAAO,MAAM4B,SAAS,CAAC;EAGrBhC,WAAWA,CAAA,EAAG;IAAA,KAFdiC,SAAS;IAGP,IAAI,CAACA,SAAS,GAAG,IAAI9B,SAAS,CAAC,CAAC;EAClC;AACF;AAEA,MAAM+B,SAAS,GAAG,IAAIF,SAAS,CAAC,CAAC;AACjC,MAAMG,gBAAgB,gBAAGzC,aAAa,CAAYwC,SAAS,CAAC;AAE5D,OAAO,MAAME,YAAY,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAiB1C,UAAU,CAACwC,gBAAgB,CAAC;AAAA;AAACE,EAAA,CAA7DD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}