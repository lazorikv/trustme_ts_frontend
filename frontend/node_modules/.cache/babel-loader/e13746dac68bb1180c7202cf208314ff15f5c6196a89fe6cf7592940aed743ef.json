{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createContext, useContext } from 'react';\nimport { observable, action, makeObservable } from 'mobx';\nexport class Task {\n  constructor(id, title) {\n    this.id = void 0;\n    this.title = void 0;\n    this.id = id;\n    this.title = title;\n    makeObservable(this, {\n      title: observable\n    });\n  }\n}\nexport class TaskStore {\n  constructor() {\n    this.tasks = [];\n    this.addTask = title => {\n      const id = this.tasks.length + 1;\n      const task = new Task(id, title);\n      this.tasks.push(task);\n    };\n    makeObservable(this, {\n      tasks: observable,\n      addTask: action\n    });\n  }\n}\nexport class RootStore {\n  constructor() {\n    this.taskStore = void 0;\n    this.taskStore = new TaskStore();\n  }\n}\nconst rootStore = new RootStore();\nexport const RootStoreContext = /*#__PURE__*/createContext(rootStore);\nexport const useRootStore = () => {\n  _s();\n  return useContext(RootStoreContext);\n};\n_s(useRootStore, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");","map":{"version":3,"names":["createContext","useContext","observable","action","makeObservable","Task","constructor","id","title","TaskStore","tasks","addTask","length","task","push","RootStore","taskStore","rootStore","RootStoreContext","useRootStore","_s"],"sources":["/home/NIX/lazoryk/projects/react_ts/todoapp/todo-app/src/stores/RootStore.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\nimport { observable, action, makeObservable } from 'mobx';\n\nexport class Task {\n  id: number;\n  title: string;\n\n  constructor(id: number, title: string) {\n    this.id = id;\n    this.title = title;\n    makeObservable(this, {\n        title: observable\n    })\n  }\n}\n\nexport class TaskStore {\n\n    tasks: Task[] = []\n\n    constructor() {\n       makeObservable(\n        this, {\n            tasks: observable,\n            addTask: action\n        }\n       ) \n    }\n\n  addTask = (title: string): void => {\n    const id = this.tasks.length + 1;\n    const task = new Task(id, title);\n    this.tasks.push(task);\n  };\n}\n\n\n\nexport class RootStore {\n  taskStore: TaskStore;\n\n  constructor() {\n    this.taskStore = new TaskStore();\n  }\n}\n\nconst rootStore = new RootStore();\nexport const RootStoreContext = createContext(rootStore);\n\nexport const useRootStore = (): RootStore => useContext(RootStoreContext);\n"],"mappings":";AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,SAASC,UAAU,EAAEC,MAAM,EAAEC,cAAc,QAAQ,MAAM;AAEzD,OAAO,MAAMC,IAAI,CAAC;EAIhBC,WAAWA,CAACC,EAAU,EAAEC,KAAa,EAAE;IAAA,KAHvCD,EAAE;IAAA,KACFC,KAAK;IAGH,IAAI,CAACD,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClBJ,cAAc,CAAC,IAAI,EAAE;MACjBI,KAAK,EAAEN;IACX,CAAC,CAAC;EACJ;AACF;AAEA,OAAO,MAAMO,SAAS,CAAC;EAInBH,WAAWA,CAAA,EAAG;IAAA,KAFdI,KAAK,GAAW,EAAE;IAAA,KAWpBC,OAAO,GAAIH,KAAa,IAAW;MACjC,MAAMD,EAAE,GAAG,IAAI,CAACG,KAAK,CAACE,MAAM,GAAG,CAAC;MAChC,MAAMC,IAAI,GAAG,IAAIR,IAAI,CAACE,EAAE,EAAEC,KAAK,CAAC;MAChC,IAAI,CAACE,KAAK,CAACI,IAAI,CAACD,IAAI,CAAC;IACvB,CAAC;IAZIT,cAAc,CACb,IAAI,EAAE;MACFM,KAAK,EAAER,UAAU;MACjBS,OAAO,EAAER;IACb,CACD,CAAC;EACJ;AAOJ;AAIA,OAAO,MAAMY,SAAS,CAAC;EAGrBT,WAAWA,CAAA,EAAG;IAAA,KAFdU,SAAS;IAGP,IAAI,CAACA,SAAS,GAAG,IAAIP,SAAS,CAAC,CAAC;EAClC;AACF;AAEA,MAAMQ,SAAS,GAAG,IAAIF,SAAS,CAAC,CAAC;AACjC,OAAO,MAAMG,gBAAgB,gBAAGlB,aAAa,CAACiB,SAAS,CAAC;AAExD,OAAO,MAAME,YAAY,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAiBnB,UAAU,CAACiB,gBAAgB,CAAC;AAAA;AAACE,EAAA,CAA7DD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}